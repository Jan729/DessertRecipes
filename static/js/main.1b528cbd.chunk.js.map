{"version":3,"sources":["state/reducer.js","state/actions.js","App.js","serviceWorker.js","components/DessertTable.js","components/Header.js","components/Footer.js","components/RecipeTile.js","pages/About.js","pages/HomePage.js","pages/PageNotFound.js","pages/RecipePage.js","state/actionTypes.js","index.js"],"names":["initialState","title","img","prepTime","totalTime","amount","desc","ingredients","instructions","reducer","state","action","type","actionTypes","SET_RECIPE","recipeName","recipeData","desserts","find","recipe","AppContext","React","createContext","App","useReducer","dispatch","Provider","value","className","exact","path","component","About","RecipePage","HomePage","PageNotFound","Boolean","window","location","hostname","match","RecipeTable","class","map","item","key","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","role","aria-haspopup","aria-labelledby","placeholder","Footer","RecipeTile","history","useHistory","useContext","style","width","onClick","console","log","push","src","alt","recipeJSON","category","realFood","sauces","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b528cbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { setRecipeInfo } from \"./actions\";\r\nimport { actionTypes} from \"../index\"\r\n\r\nexport const initialState = {\r\n    title: \"Microwaved Potato\",\r\n    img: \"data: image/jpeg;base64,/9j / 4AAQSkZJRgABAQAAAQABAAD / 2wCEAAkGBxITEhUTExMWFhUXGB4ZFxgXGRcXGhoaGhgaGhoYGxgZHiggGhslGxcXIjEiJSkrLi4uGB8zODMtNygtLisBCgoKDg0OGhAQGy0lICUtLS0uLS0tLS0tLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf / AABEIAMEBBQMBIgACEQEDEQH / \",\r\n    prepTime: \"10 min\",\r\n    totalTime: \"10 min\",\r\n    amount: \"1 potato\",\r\n    desc: \"The easiest way to enjoy a potato.\",\r\n    ingredients: [\"1 large potato\"],\r\n    instructions: [\r\n        \"Wash potato\",\r\n        \"Prick holes in potato with a fork\",\r\n        \"Microwave for 5 mins, then flip the potato, and microwave for another 5 mins\",\r\n        \"Eat\"\r\n    ]\r\n    \r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case actionTypes.SET_RECIPE:\r\n          return setRecipeInfo(action.recipeName);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import recipeData from \"../recipeData.json\";\r\n\r\nexport const setRecipeInfo = (title, category) => {\r\n    return recipeData.desserts.find(recipe => recipe.title === title);\r\n}","import React, { useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport {\n    About,\n    HomePage,\n    PageNotFound,\n    Header,\n    Footer,\n    RecipePage\n} from \"./index.js\";\nimport { initialState, reducer } from \"./state/reducer\";\n\nexport const AppContext = React.createContext(initialState);\n\n//Note to self: If you want to add more recipes, add another entry inside recipeData.json like so:\n/**{\n      \"title\": \"\",\n      \"img\": \"lavenderShortbread.png\",\n      \"prep-time\": \"\",\n      \"total-time\": \"\",\n      \"amount\": \"\",\n      \"desc\": \"\",\n      \"ingredients\": [],\n      \"instructions\": []\n    } */\n\nconst App = () => {\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            <Router>\n                <Header />\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/About\" component={About} />\n                        <Route exact path=\"/Recipe\" component={RecipePage} />\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </div>\n                <Footer />\n            </Router>\n        </AppContext.Provider>\n\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { RecipeTile } from \"../index.js\";\r\n\r\nconst RecipeTable = ({ recipeData }) => {\r\n\r\n    return (\r\n \r\n    <div class=\"row\">\r\n        {recipeData.map(item => (\r\n          <RecipeTile key={item.title} title={item.title} img={item.img} />\r\n        ))}\r\n    {/*<div class=\"col-md p-3\">*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeTable;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link class=\"navbar-brand\" to=\"/\">\r\n        <h1 className=\"display-4\">Janelle's Recipes</h1>\r\n      </Link>\r\n\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\" />\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item active\">\r\n            <Link class=\"nav-link\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li class=\"nav-item active\">\r\n            <Link class=\"nav-link\" to=\"/About\">\r\n              About\r\n            </Link>\r\n          </li>\r\n\r\n          <li class=\"nav-item dropdown\">\r\n            <a\r\n              class=\"nav-link dropdown-toggle\"\r\n              href=\"#\"\r\n              id=\"navbarDropdown\"\r\n              role=\"button\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Recipes\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <a class=\"dropdown-item\" href=\"#\">\r\n                Desserts\r\n              </a>\r\n              <a class=\"dropdown-item\" href=\"#\">\r\n                Real Food\r\n              </a>\r\n              <div class=\"dropdown-divider\" />\r\n              <a class=\"dropdown-item\" href=\"#\">\r\n                Sauces and more\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n          <input\r\n            class=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <footer class=\"container\">This is a footer.</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { actionTypes, AppContext } from \"../index\"\r\n\r\n//TODO: on click, change link to button, and find the recipe and set \r\n//the info in state\r\nconst RecipeTile = ({ title, img }) => {\r\n    const history = useHistory();\r\n    const { dispatch } = useContext(AppContext);\r\n\r\n    const goToRecipe = () => {\r\n        console.log(\"go to recipe?\");\r\n        history.push(\"/Recipe\");\r\n        dispatch({ type: actionTypes.SET_RECIPE, recipeName: title});\r\n    }\r\n\r\n    return (\r\n\r\n        <div role=\"button\" className={\"card p-3\"} style={{ width: \"18rem\" }} onClick={goToRecipe}>\r\n            <img className={\"img-rounded card-img-top\"} src={img} alt={\"Recipe image\"} />\r\n\r\n            <div className={\"card-body\"}>\r\n                <p className={\"card-title\"}>{title}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeTile;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  const intro =\r\n    \"Welcome. Are you tired of googling recipes, only to scroll through endless blog posts and ads to find the recipe you wanted? Well scroll no more! This site contains tried and true recipes that will be sure to please even the pickiest of family members.*\";\r\n  const promise =\r\n    \"No ads. No irrelevant blog content. All recipes tested on humans, not animals.\";\r\n  const disclaimer =\r\n    \"*All recipes have been tested and approved by my brother, who \";\r\n  const veryPicky = \" is extremely picky\";\r\n  const refinedTastebuds = \" has extremely refined tastebuds.\";\r\n  const sideNote =\r\n    \"Vegans, if you are looking for baked goods that do not contain butter, please look elsewhere.\";\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4\">About</h1>\r\n      <p>{intro}</p>\r\n      <p>{promise}</p>\r\n\r\n      <p>{sideNote}</p>\r\n      <h5>\r\n        {disclaimer}\r\n        <del>{veryPicky}</del>\r\n        {refinedTastebuds}\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { RecipeTable } from \"../index.js\";\r\nimport recipeJSON from \"../recipeData.json\";\r\n\r\n//TODO: browse all recipes, or search by name\r\n//put search bar at top of screen, below nav\r\n//search by title, or ingredient\r\n\r\n//TODO: add constants list for dessert, sauce, realFood\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <h1 className=\"display-3\">Browse All Recipes</h1>\r\n\r\n      <div class=\"container p-3\">\r\n        <h1 className=\"display-4\">Desserts</h1>\r\n              <RecipeTable recipeData={recipeJSON.desserts} category={\"desserts\"}/>\r\n        <h1 className=\"display-4\">Real Food</h1>\r\n              <RecipeTable recipeData={recipeJSON.realFood} category={\"realFood\"}/>\r\n        <h1 className=\"display-4\">Sauces</h1>\r\n              <RecipeTable recipeData={recipeJSON.sauces} category={\"sauces\"}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Link } from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return <h1>Hoorah! This page doesn't exist. </h1>;\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useContext } from \"react\";\r\nimport recipeData from \"../recipeData.json\";\r\nimport { AppContext } from \"../index.js\";\r\n\r\nconst RecipePage = () => {\r\n    //when someone clicks a recipe, save the recipe object in session storage\r\n    //get the title from session storage in here\r\n    //search thru list of recipes to find the recipe info\r\n    const { state } = useContext(AppContext);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"display-3\">{state.title}</h1>\r\n            <p>Prep Time: {state.prepTime}</p>\r\n            <p>Total Time: {state.totalTime}</p>\r\n            <p>Yield: {state.amount}</p>\r\n            <img className={\"img-fluid img-rounded mt-5 mb-5\"} src={state.img} alt={\"Card image cap\"} />\r\n            <p>{state.desc}</p>\r\n            <h1 className=\"display-3\">Ingredients</h1>\r\n            <ul>{state.ingredients.map(item => <li>{item}</li>)}</ul>\r\n            <h1 className=\"display-3\">Instructions</h1>\r\n            <ol>{state.instructions.map(item => <li>{item}</li>)}</ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipePage;\r\n","export const SET_RECIPE = \"SET_RECIPE\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nimport RecipeTable from \"./components/DessertTable\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport RecipeTile from \"./components/RecipeTile\";\n\nimport About from \"./pages/About\";\nimport HomePage from \"./pages/HomePage\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport RecipePage from \"./pages/RecipePage\";\n\nimport * as actionTypes from \"./state/actionTypes\";\nimport { AppContext } from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nexport {\n  actionTypes,\n  About,\n  AppContext,\n  RecipeTable,\n  Footer,\n  HomePage,\n  Header,\n  PageNotFound,\n  RecipePage,\n  RecipeTile\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}